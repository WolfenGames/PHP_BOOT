
<- Camera ----------------------------------------------------------------------

This is the camera class, allows us to view the world around us in a 3D/2D space

Variable:
proj -> Type of Projection - See Matrix
tR -> Rotation / Orientation
tT -> Translation
orig -> Origin
width -> width
height -> height
ratio -> the relation between width and height.

Ratio : The final image ratio, meaning the ratio between the imageâ€™s 
width and height. You have heard of 16:9 or 4:3 aspect ration? 
Well these are image ratios.

Fov : The field of view of the projected image in degrees.
Look for "3D field of view" on the Internet if you want to learn more.
In practice 60 degrees is a correct arbitrary value.
It roughly corresponds to the angle between your nose and both edges of the 
screen of your computer right now. We will be able to modify this value
if we want to see a more or less big part of the scene.

near : The near clipping plane. This concept a little more difficult,
to understand. It is the distance of the camera from which an object is seen.

far : The far clipping plane. For those interested these two 
lanes enable us to calculate the Z-buffer of a scene.

public functions:

watchVertex(Vertex $worldVertex)

Transforms "world" coordinates
vertex into a "screen" coordinates vertex (a pixel basically).

---------------------------------------------------------------------- Camera ->
